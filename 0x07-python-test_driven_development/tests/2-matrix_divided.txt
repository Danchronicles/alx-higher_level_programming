>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Basic integer matrix division
>>> matrix_divided([[1, 2], [3, 4]], 2)
[[0.5, 1.0], [1.5, 2.0]]

# Floats and rounding to 2 decimals
>>> matrix_divided([[1.234, 2.345]], 1)
[[1.23, 2.35]]

# Mixed ints and floats
>>> matrix_divided([[5.5, 4], [3, 2.2]], 2)
[[2.75, 2.0], [1.5, 1.1]]

# Empty matrix returns empty list
>>> matrix_divided([], 3)
[]

# Error: div must be a number
>>> try:
...     matrix_divided([[1]], "a")
... except TypeError as e:
...     print(e)
div must be a number

# Error: division by zero
>>> try:
...     matrix_divided([[1]], 0)
... except ZeroDivisionError as e:
...     print(e)
division by zero

# Error: matrix is not a list of lists
>>> try:
...     matrix_divided("not a matrix", 2)
... except TypeError as e:
...     print(e)
matrix must be amatrix (list of lists) of intergers/floats

# Error: row is not a list
>>> try:
...     matrix_divided([1, 2, 3], 2)
... except TypeError as e:
...     print(e)
matrix must be amatrix (list of lists) of intergers/floats

# Error: non-numeric element in matrix
>>> try:
...     matrix_divided([[1, "2"]], 2)
... except TypeError as e:
...     print(e)
matrix must be a matrix (list of lists) of intergers/floats

# Error: inconsistent row sizes
>>> try:
...     matrix_divided([[1, 2], [3]], 2)
... except TypeError as e:
...     print(e)
Each row of the matrix must have the same size